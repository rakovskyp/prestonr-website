{"version":3,"sources":["webpack:///./src/images/SmartMirror/spraypaint.png","webpack:///./src/components/layout.js","webpack:///./src/images/SmartMirror/diagram.png","webpack:///./src/images/SmartMirror/finalprod.png","webpack:///./src/images/SmartMirror/smNewCover.png","webpack:///./src/images/SmartMirror/smpulledapart.png","webpack:///./src/pages/projects/smartMirror.js"],"names":["module","exports","StyledLink","styled","props","Layout","children","className","style","margin","maxWidth","padding","SmartMirror","title","to","src","Cover","PulledApart","Diagram","Spray","Final"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,0D,iWCgB3C,IAAMC,EAAaC,aAAO,SAAAC,GAAK,OAAI,kBAAC,OAASA,KAA1BD,CAAH,KA8CDE,IAxCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACN,OAUV,OACE,oCACE,6BACE,kBAACJ,EAAD,KAAY,wBAAIK,UAAU,iBAAd,aAGd,yBAAKA,UAAU,eACX,kBAAC,IAAD,OAEJ,yBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOL,GACP,yC,qBClDRN,EAAOC,QAAU,IAA0B,uD,+HCA3CD,EAAOC,QAAU,IAA0B,yD,qBCA3CD,EAAOC,QAAU,IAA0B,0D,qBCA3CD,EAAOC,QAAU,IAA0B,6D,ikBCY3C,IAAMC,EAAaC,aAAO,SAAAC,GAAK,OAAI,kBAAC,OAASA,KAA1BD,CAAH,KA2LDS,UA9KK,SAAAR,GAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKS,MAAM,iBACX,yBAAKN,UAAU,wBAEb,kBAACL,EAAD,CAAYY,GAAG,SACb,qCAGF,yBAAKC,IAAKC,MAEV,4CAEA,yBAAKD,IAAKE,MACV,yQAQA,4NAOA,2JAMA,8CAEA,sEAIA,4BACI,sCACA,2CACA,wCACA,4CAGJ,yCAEA,iPAQA,4BACI,iDACA,8EACA,yGAGJ,8QAQA,0JAMA,yBAAKF,IAAKG,MAEV,8CAEA,iWAWA,0FAIA,gPAOA,2CAEA,yIAKA,2JAMA,2GAIA,yBAAKH,IAAKI,MAEV,yIAIA,oNAOA,8CAEA,uIAKA,yRAQA,yBAAKJ,IAAKK,MAEV,iZAUA","file":"component---src-pages-projects-smart-mirror-js-ca2f47c876115f48ac16.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/spraypaint-29aa14ce3daecf8d5e20e852738d3b76.png\";","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\n\nimport styled from \"styled-components\";\nimport Nav from './nav'\nimport \"./layout.css\"\n\nconst StyledLink = styled(props => <Link {...props} />)`\n    text-decoration: none;\n    text-decoration-color: initial;\n    text-decoration-style: initial;\n`;\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div>\n        <StyledLink><h1 className=\"headerPreston\">preston</h1></StyledLink>\n      </div>\n\n      <div className=\"headerOther\">\n          <Nav />\n      </div>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          {` `}\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/diagram-e6325f0991c8df8fab2f21f0cce0ec3d.png\";","module.exports = __webpack_public_path__ + \"static/finalprod-33bab1b38bf3c738f38a277ef7dd1705.png\";","module.exports = __webpack_public_path__ + \"static/smNewCover-2be9fb830509588b4c806f0192343866.png\";","module.exports = __webpack_public_path__ + \"static/smpulledapart-c52d2b80a635d8a3e7d204d781e25eb4.png\";","import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport SEO from '../../components/seo'\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nimport Cover from '../../images/SmartMirror/smNewCover.png'\nimport PulledApart from '../../images/SmartMirror/smpulledapart.png'\nimport Diagram from '../../images/SmartMirror/diagram.png'\nimport Spray from '../../images/SmartMirror/spraypaint.png'\nimport Final from '../../images/SmartMirror/finalprod.png'\n\nconst StyledLink = styled(props => <Link {...props} />)`\n  font-size: 16px;\n  padding: 0 15px;\n  float: right;\n  text-align: right;\n  position: relative;\n  text-decoration: none;\n  text-decoration-color: initial;\n  text-decoration-style: initial;\n  color: black;\n  font-family: georgia, serif;\n`\n\nconst SmartMirror = props => {\n  return (\n    <Layout>\n      <SEO title=\"Smart Mirror\" />\n      <div className=\"fade-in smart-mirror\">\n        {/* <h1 className=\"title shrink\">smart mirror</h1> */}\n        <StyledLink to=\"/code\">\n          <h4>back</h4>\n        </StyledLink>\n        \n        <img src={Cover}></img>\n       \n        <h3>How it works</h3>\n\n        <img src={PulledApart}></img>\n        <p>\n        A two-way mirror, commonly known for its use as \n        one-way glass in interrogation rooms, reflects \n        like a normal mirror in the absence of light. \n        However, when white light is pressed directly against \n        the glass, it is able to shine through.\n        </p>\n        \n        <p>\n        With this in mind, I developed a software to create the \n        Smart Mirror. Running on a Raspberry Pi, the program displays \n        widgets on a monitor in the form of white text with \n        a black background.\n        </p>\n\n        <p>\n        By holding the monitor up with wood and running the \n        software behind the mirror and frame, I created \n        a \"smart\" mirror effect.\n        </p>\n\n        <h3>Design Process</h3>\n\n        <p>\n        I divided the project into four stages:\n        </p>\n\n        <ol>\n            <li>Design</li>\n            <li>Development</li>\n            <li>Woodwork</li>\n            <li>Integration</li>\n        </ol>\n\n        <h3>1. Design</h3>\n\n        <p>\n        I first had to decide what features I wanted to \n        implement into the Smart Mirror. To do this, I \n        listed things that would make my morning more \n        efficient by having all of the information in \n        one place to reference:\n        </p>\n\n        <ul>\n            <li>Checking the time</li>\n            <li>Looking at the weather and temperature outside</li>\n            <li>Going through my calendar to see what meetings/events I have for the day</li>\n        </ul>\n\n        <p>\n        The last thing most people can do in the morning is waste \n        time, as they rush to their first class or to catch the \n        train to their commute. Having all of this information \n        accessible at a quick glance streamlines their mornings \n        exponentially.\n        </p>\n\n        <p>\n        Using Photoshop, I designed a general outline of \n        what the software would look like, with a \n        rough idea of how it would work.\n        </p>\n\n        <img src={Diagram}></img>\n\n        <h3>2. Development</h3>\n\n        <p>\n        Initially, I struggled in deciding whether to \n        develop the software in Java or Javascript.\n         I decided on Javascript because the front end \n         of this application would be more smoothly \n         designed with HTML and CSS in a locally \n         hosted browser. Additionally, the front \n         end would be much easier and more versatile in \n         terms of design.\n        </p>\n\n        <p>\n        The application would run on my Raspberry Pi's Raspbian OS.\n        </p>\n\n        <p>\n        To generate the weather data, I fetch JSON data from a \n        weather API, known as Dark Sky API. In my Javascript \n        code, I parse the JSON data into an invisible table \n        that is displayed on the right side of my mirror.\n        </p>\n\n        <h3>3. Woodwork</h3>\n\n        <p>In order to maintain the mirror look, I had \n            to make two frames: one for the inside and one \n            for the outside\n        </p>\n\n        <p>\n        The outside frame was the front frame that was visibile to \n        everyone. This was to emulate the actual mirror frame \n        appearance.\n        </p>\n\n        <p>\n        The inside frame was hidden and its purpose was to hold the mirror in place.\n        </p>\n\n        <img src={Spray}></img>\n\n        <p>\n        After gluing and nailing the wood together, I spray-painted the frame black, as seen in the above picture.\n        </p>\n\n        <p>\n        I then glued a blackout curtain to the bottom half of \n        the frame to ensure that, in the case of leakage of \n        light from the monitor, the mirror would still remain \n        perfectly reflective.\n        </p>\n\n        <h3>4. Integration</h3>\n\n        <p>In order to bring the \"magic\" to the mirror, \n            I had to actually install the Raspberry Pi into \n            the mirror.\n        </p>\n\n        <p>\n        I plugged in the necessary wires and connected everything. \n        However, one issue I ran into was that the Raspberry Pi \n        was very processor dependent, so it would overheat a \n        few minutes after running. To fix this, I installed a \n        heat sinks on the processor.\n        </p>\n\n        <img src={Final}></img>\n\n        <p>\n        Overall, I am thrilled with the end result of the Smart Mirror. \n        I have not experienced any glitches with it, and I use it \n        every day. Additionally, I accomplished all the goals I set \n        out to, namely utilizing my newfound programming skills, \n        following through and sticking with a project to completion, \n        and contributing a great piece of furniture to my college \n        living room!\n        </p>\n\n        <p>\n        In the future, I would like to consider implementing a \n        motion sensor for the mirror to turn on whenever I walk by. \n        I would also like to possibly integrate the abilities of \n        Amazon Alexa into the Smart Mirror as well.\n        </p>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default SmartMirror\n"],"sourceRoot":""}